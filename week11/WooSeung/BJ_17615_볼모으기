package baekjoon;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class BJ_17615_볼모으기 {

    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        String balls = br.readLine();

        int ans = Integer.MAX_VALUE;
        int cnt = 0;    // 동작 횟수 
        boolean firstCheck = false; // 처음 공 판단

        // 왼쪽 파란공
        for(int i = 0; i < N; i++) {
        // 처음 공이 옮겨야하는 색일 경우 firstCheck가 false이기 때문에 cnt를 증가시키지 않는다.
            if(firstCheck && balls.charAt(i) == 'B') {  
                cnt++;
            }
            // 처음 공이 다른색일 경우 현재 공 이후에 나오는 모든 선택한 색의 공은 이동을 해야하기 때문에 firstCheck를 false로 변경
            if(balls.charAt(i) == 'R') {
                firstCheck = true;
            }
        }
        ans = Math.min(ans, cnt);

        // 왼쪽 빨간공
        cnt = 0;
        firstCheck = false;
        for(int i = 0; i < N; i++) {
            if(firstCheck && balls.charAt(i) == 'R') {
                cnt++;
            }
            if(balls.charAt(i) == 'B') {
                firstCheck = true;
            }
        }
        ans = Math.min(ans, cnt);

        // 오른쪽 파란공
        cnt = 0;
        firstCheck = false;
        for(int i = N - 1; i >= 0; i--) {
            if(firstCheck && balls.charAt(i) == 'B') {
                cnt++;
            }
            if(balls.charAt(i) == 'R') {
                firstCheck = true;
            }
        }
        ans = Math.min(ans, cnt);

        // 오른쪽 빨간공
        cnt = 0;
        firstCheck = false;
        for(int i = N - 1; i >= 0; i--) {
            if(firstCheck && balls.charAt(i) == 'R') {
                cnt++;
            }
            if(balls.charAt(i) == 'B') {
                firstCheck = true;
            }
        }
        ans = Math.min(ans, cnt);

        System.out.println(ans);


    }

}
